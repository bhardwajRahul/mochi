package main

import (
	"encoding/json"
	"os"
	"strconv"
	"time"
)

func isPrime(n int) bool {
	if n < 2 {
		return false
	}
	for i := 2; i*i <= n; i++ {
		if n%i == 0 {
			return false
		}
	}
	return true
}

func main() {
	n := {{ .N }}
	repeat := 100
	last := 0

	// Allow CLI override
	if len(os.Args) > 1 {
		if parsed, err := strconv.Atoi(os.Args[1]); err == nil {
			n = parsed
		}
	}

	start := time.Now()
	for r := 0; r < repeat; r++ {
		count := 0
		for i := 2; i <= n; i++ {
			if isPrime(i) {
				count++
			}
		}
		last = count
	}
	duration := float64(time.Since(start).Microseconds()) / 1000.0 // ms

	_ = json.NewEncoder(os.Stdout).Encode(map[string]any{
		"duration_ms": duration,
		"output":      last,
	})
}
