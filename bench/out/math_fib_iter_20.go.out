package main

import (
	"encoding/json"
	"fmt"
	"time"
)

func fib(n any) any {
	var a = 0
	var b = 1
	for i := 0; i < n; i++ {
		var tmp = _add(a, b)
		a = b
		b = tmp
	}
	return a
}

func main() {
	var n = 20
	var repeat = 1000
	var last = 0
	var start = time.Now().UnixNano()
	for i := 0; i < repeat; i++ {
		last = fib(n)
	}
	var duration = (((time.Now().UnixNano() - start)) / 1000000)
	var output = map[string]any{"duration_ms": duration, "output": last}
	func(){b,_:=json.Marshal(output);fmt.Println(string(b))}()
}

func _add(a, b any) any { return a.(int) + b.(int) }

