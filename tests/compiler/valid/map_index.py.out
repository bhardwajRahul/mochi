# Generated by Mochi Python compiler

async def main():
	scores = {"Alice": 10, "Bob": 15}
	print(_index(scores, "Bob"))

def _index(v, k):
    if isinstance(v, list):
        if not isinstance(k, int):
            raise Exception('invalid list index')
        if k < 0:
            k += len(v)
        if k < 0 or k >= len(v):
            raise Exception('index out of range')
        return v[k]
    if isinstance(v, str):
        if not isinstance(k, int):
            raise Exception('invalid string index')
        if k < 0:
            k += len(v)
        if k < 0 or k >= len(v):
            raise Exception('index out of range')
        return v[k]
    if isinstance(v, dict):
        return v[k]
    return v[k]
import asyncio
_pending = []
async def _wait_all():
    await asyncio.gather(*_pending)
async def _run():
	await main()
	await _wait_all()

if __name__ == "__main__":
	import asyncio
	asyncio.run(_run())
