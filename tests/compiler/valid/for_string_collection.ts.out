// Generated by Mochi TypeScript compiler

async function main(): Promise<void> {
	for (const ch of _iter("hi")) {
		console.log(ch)
	}
}
await main()
await _waitAll()

function _iter(v: any): any {
  if (v && typeof v === 'object' && !Array.isArray(v) && !(Symbol.iterator in v)) {
    return Object.keys(v);
  }
  return v;
}

const _pending: Promise<any>[] = [];
async function _waitAll(): Promise<void> {
  await Promise.all(_pending);
}
